/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hr.algebra.design;

import hr.algebra.dall.RepoFactory;
import hr.algebra.dall.Repository;
import hr.algebra.models.Actor;
import hr.algebra.models.Director;
import hr.algebra.models.Movie;
import hr.algebra.models.MovieArchive;
import hr.algebra.models.MovieTableModel;
import hr.algebra.parser.rss.MovieParser;
import hr.algebra.utils.JAXBUtils;
import hr.algebra.utils.MessageUtils;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ListSelectionModel;
import javax.xml.bind.JAXBException;
import javax.xml.stream.XMLStreamException;

/**
 *
 * @author Marko
 */
public class MainMenu extends javax.swing.JPanel {

    private static final String FILENAME = "moviearchive.xml";
    
    private Repository repo;
    private List<Movie> allmovies;
    private MovieTableModel movieTableModel;
    /**
     * Creates new form MainMenu
     */
    public MainMenu() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbMainMenuTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnPushToSql = new javax.swing.JButton();
        btnDeleteAll = new javax.swing.JButton();
        btnCreateXML = new javax.swing.JButton();

        setBackground(new java.awt.Color(36, 38, 130));
        setForeground(new java.awt.Color(255, 255, 255));

        tbMainMenuTable.setBackground(new java.awt.Color(47, 47, 162));
        tbMainMenuTable.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 115, 142)));
        tbMainMenuTable.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tbMainMenuTable.setForeground(new java.awt.Color(235, 64, 52));
        tbMainMenuTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbMainMenuTable.setGridColor(new java.awt.Color(252, 186, 3));
        tbMainMenuTable.setSelectionBackground(new java.awt.Color(85, 61, 103));
        jScrollPane1.setViewportView(tbMainMenuTable);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(235, 64, 52));
        jLabel1.setText("POPIS FILMOVA");

        btnPushToSql.setBackground(new java.awt.Color(36, 36, 130));
        btnPushToSql.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnPushToSql.setForeground(new java.awt.Color(235, 64, 52));
        btnPushToSql.setText("Push to Database");
        btnPushToSql.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPushToSqlActionPerformed(evt);
            }
        });

        btnDeleteAll.setBackground(new java.awt.Color(36, 38, 130));
        btnDeleteAll.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnDeleteAll.setForeground(new java.awt.Color(235, 64, 52));
        btnDeleteAll.setText("Brisi Sve");
        btnDeleteAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteAllActionPerformed(evt);
            }
        });

        btnCreateXML.setBackground(new java.awt.Color(36, 38, 130));
        btnCreateXML.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnCreateXML.setForeground(new java.awt.Color(235, 64, 52));
        btnCreateXML.setText("Create XML");
        btnCreateXML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateXMLActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPushToSql, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCreateXML, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeleteAll, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(454, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(407, 407, 407))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCreateXML, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(183, 183, 183)
                        .addComponent(btnPushToSql, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDeleteAll, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 574, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateXMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateXMLActionPerformed
        createXml();
    }//GEN-LAST:event_btnCreateXMLActionPerformed

    private void btnPushToSqlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPushToSqlActionPerformed
        fillDatabase();
    }//GEN-LAST:event_btnPushToSqlActionPerformed

    private void btnDeleteAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteAllActionPerformed
        try {
            repo.deleteEverything();
        } catch (Exception ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
            MessageUtils.showErrorMessage("Greska!!", "Nemoguce brisanje svega iz baze!!");
        }
    }//GEN-LAST:event_btnDeleteAllActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreateXML;
    private javax.swing.JButton btnDeleteAll;
    private javax.swing.JButton btnPushToSql;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbMainMenuTable;
    // End of variables declaration//GEN-END:variables

    private void init() {
        initRepo();
        parseFromUrl();
        initTable();
    }

    private void createXml() {
        try {
            JAXBUtils.save(new MovieArchive(allmovies), FILENAME);
            MessageUtils.showInformationMessage("Info", "Movie updated");
        } catch (JAXBException ex) {
            MessageUtils.showErrorMessage("Error", "Unable to save XML file");
            Logger.getLogger(EditMoviesMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void fillDatabase() {
        try {
            repo.createMovies(allmovies);
            
            allmovies.forEach((Movie movie) -> {
                try {
                    repo.createActors(movie.getActors());
                } catch (Exception ex) {
                    Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
                }
            });
            
            allmovies.forEach((Movie movie) -> {
                try {
                    repo.createDirectors(movie.getDirectors());
                } catch (Exception ex) {
                    Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
                }
            });
            
            for (Movie movie : allmovies) {
                movie.getActors().forEach((Actor actor) -> {
                    try {
                        repo.createActorMovie(actor.getId(), movie.getId());
                        
                    } catch (Exception ex) {
                        Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
                    }                
                });
                
                movie.getDirectors().forEach((Director director) -> {
                    try {
                        repo.createDirectorMovie(director.getId(), movie.getId());
                    } catch (Exception ex) {
                        Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
                    }
                });
            }                  
        } catch (Exception ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void initRepo() {
        try {
            repo = RepoFactory.getRepository();
        } catch (Exception ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
            MessageUtils.showErrorMessage("Error", "Could not create repository");
        }
    }

    private void parseFromUrl() {
        try {
            allmovies = new MovieParser().parse();
        } catch (IOException ex) {
            Logger.getLogger(EditMoviesMain.class.getName()).log(Level.SEVERE, null, ex);
            MessageUtils.showErrorMessage("Greska!!", "Nemoguce parsirat s Cinestar.rss");
        } catch (XMLStreamException ex) {
            Logger.getLogger(EditMoviesMain.class.getName()).log(Level.SEVERE, null, ex);
            MessageUtils.showErrorMessage("Greska!!", "Nemoguce parsirat s Cinestar.rss");
        }
    }

    private void initTable() {
        tbMainMenuTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tbMainMenuTable.setAutoCreateRowSorter(true);
        tbMainMenuTable.setRowHeight(25);
        try {           
            movieTableModel = new MovieTableModel(allmovies);
        } catch (Exception ex) {
            Logger.getLogger(EditMoviesMain.class.getName()).log(Level.SEVERE, null, ex);            
        }
        tbMainMenuTable.setModel(movieTableModel);
    }
}
